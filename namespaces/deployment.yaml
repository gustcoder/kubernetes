apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
spec:
  selector:
    matchLabels:
      app: server
    template:
      metadata:
        labels:
          app: server
      spec:
        serviceAccount: server
        containers:
          - name: server
            image: "image-app-name-here:latest"
            # minimum system requirements
            resources:
              requests:
                cpu: 100m # (unidade de milicores :: 1 vCPU == 1000m)
                memory: 16Mi # megabytes
              # lembrar que recursos são multiplicados por número de replicas
              limits:
                cpu: 500m
                memory: 32Mi

            # recurso de health-check
            livenessProbe:
              httpGet:
                path: /healthz
                port: 8000
              periodseconds: 5
              failureThreshold: 1 # limite de quantos erros até reiniciar o serviço
              timeoutSeconds: 1 # testse integrados precisam de mais tolerancia
              successThreshold: 1 # numero de testes para considerar a aplicacao ok
            # só libera o trafego quando a aplicacao estiver pronta
            readinessProbe:
              httpGet:
                path: /healthz
                port: 8000
              periodseconds: 3
              failureThreshold: 1 # limite de quantos erros até reiniciar o serviço
              # initialDelaySeconds: 10 # tempo para o app subir (com Startup, não é necessário)
            # funciona como o readiness porém somente no processo de inicialização
            startupProbe:
              httpGet:
                path: /healthz
                port: 8000
              periodseconds: 3
              failureThreshold: 10 # limite de quantos erros até reiniciar o serviço
            env:
              # 1. Declarando var env hard-coded
              - name: NAME
                value: "Gustavo"
              # 2. Puxando var env do ConfigMap  
              - name: AGE
                valueFrom:
                  configMapKeyRef:
                    name: appname-env
                    key: AGE
            # 3. Desta forma todas as keys declaradas
            # em configMap são carregadas
            envFrom:
              - configMapKeyRef:
                name: appname-env
                